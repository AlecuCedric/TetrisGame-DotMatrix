
AVRASM ver. 2.1.30  C:\Users\alecu\Documents\Facultate\Anul 3 sem II\P2\AVR-projects\Tetris-Game_Dot-Matrix-Display-8x8_Atmega164A\Debug\List\Tetris-Game.asm Mon Aug 05 16:22:24 2024

                 
                 
                 ;CodeVisionAVR C Compiler V4.02 
                 ;(C) Copyright 1998-2024 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega164A
                 ;Program type           : Application
                 ;Clock frequency        : 20.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega164A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 00d5 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00003e 2710
00003f 03e8
000040 0064
000041 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000042 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000043 1000
000044 0100
000045 0010
000046 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
000047 0000
000048 0001
000049 0001
00004a 0001      	.DB  0x0,0x0,0x1,0x0,0x1,0x0,0x1,0x0
00004b 0001
00004c 0001
00004d 0001
00004e 0000      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x0,0x0
00004f 0001
000050 0000
000051 0000
000052 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000053 0000
000054 0000
000055 0000
000056 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
000057 0001
000058 0000
000059 0000
00005a 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00005b 0000
00005c 0000
00005d 0000
00005e 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
00005f 0001
000060 0001
000061 0001
000062 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
000063 0001
000064 0001
000065 0001
000066 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
000067 0001
000068 0000
000069 0000
00006a 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00006b 0000
00006c 0000
00006d 0000
00006e 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
00006f 0001
000070 0000
000071 0000
000072 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000073 0000
000074 0000
000075 0000
000076 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
000077 0001
000078 0000
000079 0000
00007a 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00007b 0000
00007c 0000
00007d 0000
00007e 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x0
00007f 0001
000080 0000
000081 0000
000082 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000083 0000
000084 0000
000085 0000
C:\Users\alecu\Documents\Facultate\Anul 3 sem II\P2\AVR-projects\Tetris-Game_Dot-Matrix-Display-8x8_Atmega164A\Debug\List\Tetris-Game.asm(1484): warning: .cseg .db misalignment - padding zero byte
000086 0001      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1
                 _0x4:
000087 0001
000088 0001
000089 0001
00008a 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
00008b 0001
00008c 0001
00008d 0000
00008e 0000      	.DB  0x1,0x0,0x1,0x0,0x0,0x0,0x0,0x0
00008f 0001
000090 0000
000091 0000
000092 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000093 0000
000094 0000
000095 0001
000096 0000      	.DB  0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
000097 0001
000098 0000
000099 0000
00009a 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00009b 0000
00009c 0000
00009d 0001
00009e 0000      	.DB  0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
00009f 0001
0000a0 0001
0000a1 0001
0000a2 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
0000a3 0001
0000a4 0001
0000a5 0000
0000a6 0000      	.DB  0x1,0x0,0x1,0x0,0x0,0x0,0x0,0x0
0000a7 0001
0000a8 0000
0000a9 0000
0000aa 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ab 0000
0000ac 0000
0000ad 0001
0000ae 0000      	.DB  0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
0000af 0001
0000b0 0000
0000b1 0000
0000b2 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000b3 0000
0000b4 0000
0000b5 0001
0000b6 0000      	.DB  0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
0000b7 0001
0000b8 0000
0000b9 0000
0000ba 0000      	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000bb 0000
0000bc 0000
0000bd 0001
0000be 0000      	.DB  0x0,0x0,0x0,0x0,0x1,0x0,0x0,0x0
0000bf 0001
0000c0 0001
0000c1 0001
0000c2 0001      	.DB  0x1,0x0,0x1,0x0,0x1,0x0,0x1,0x0
0000c3 0001
C:\Users\alecu\Documents\Facultate\Anul 3 sem II\P2\AVR-projects\Tetris-Game_Dot-Matrix-Display-8x8_Atmega164A\Debug\List\Tetris-Game.asm(1501): warning: .cseg .db misalignment - padding zero byte
0000c4 0001      	.DB  0x1,0x0,0x1
                 _0x2020060:
C:\Users\alecu\Documents\Facultate\Anul 3 sem II\P2\AVR-projects\Tetris-Game_Dot-Matrix-Display-8x8_Atmega164A\Debug\List\Tetris-Game.asm(1503): warning: .cseg .db misalignment - padding zero byte
0000c5 0001      	.DB  0x1
                 _0x2020000:
0000c6 4e2d
0000c7 4e41
0000c8 4900
0000c9 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\alecu\Documents\Facultate\Anul 3 sem II\P2\AVR-projects\Tetris-Game_Dot-Matrix-Display-8x8_Atmega164A\Debug\List\Tetris-Game.asm(1506): warning: .cseg .db misalignment - padding zero byte
0000ca 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0000cb 007f      	.DW  0x7F
0000cc 0280      	.DW  _pattern
0000cd 008e      	.DW  _0x3*2
                 
0000ce 007b      	.DW  0x7B
0000cf 0300      	.DW  _pattern2
0000d0 010e      	.DW  _0x4*2
                 
0000d1 0001      	.DW  0x01
0000d2 0380      	.DW  __seed_G101
0000d3 018a      	.DW  _0x2020060*2
                 
                 _0xFFFFFFFF:
0000d4 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
0000d5 94f8      	CLI
                 
0000d6 27ee      	CLR  R30
0000d7 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0000d8 e0f1      	LDI  R31,1
0000d9 bff5      	OUT  MCUCR,R31
0000da bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
0000db e08d      	LDI  R24,(14-2)+1
0000dc e0a2      	LDI  R26,2
0000dd 27bb      	CLR  R27
                 __CLEAR_REG:
0000de 93ed      	ST   X+,R30
0000df 958a      	DEC  R24
0000e0 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000e1 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0000e2 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0000e3 e0a0      	LDI  R26,LOW(__SRAM_START)
0000e4 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0000e5 93ed      	ST   X+,R30
0000e6 9701      	SBIW R24,1
0000e7 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000e8 e9e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000e9 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000ea 9185      	LPM  R24,Z+
0000eb 9195      	LPM  R25,Z+
0000ec 9700      	SBIW R24,0
0000ed f061      	BREQ __GLOBAL_INI_END
0000ee 91a5      	LPM  R26,Z+
0000ef 91b5      	LPM  R27,Z+
0000f0 9005      	LPM  R0,Z+
0000f1 9015      	LPM  R1,Z+
0000f2 01bf      	MOVW R22,R30
0000f3 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000f4 9005      	LPM  R0,Z+
0000f5 920d      	ST   X+,R0
0000f6 9701      	SBIW R24,1
0000f7 f7e1      	BRNE __GLOBAL_INI_LOOP
0000f8 01fb      	MOVW R30,R22
0000f9 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0000fa e0e0      	LDI  R30,__GPIOR0_INIT
0000fb bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000fc efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000fd bfed      	OUT  SPL,R30
0000fe e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000ff bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000100 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000101 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000102 940c 0174 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 
                 	.DSEG
                 ;void MatrixInit(){
                 ; 0000 0021 void MatrixInit(){
                 
                 	.CSEG
                 _MatrixInit:
                 ; .FSTART _MatrixInit
                 ; 0000 0022 int i, j;
                 ; 0000 0023 for(i = 0; i < 8; i++){
000104 d0ab      	RCALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                +
000105 e000     +LDI R16 , LOW ( 0 )
000106 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x6:
                +
000107 3008     +CPI R16 , LOW ( 8 )
000108 e0e0     +LDI R30 , HIGH ( 8 )
000109 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00010a f48c      	BRGE _0x7
                 ; 0000 0024 for(j = 0; j < 8; j++){
                +
00010b e020     +LDI R18 , LOW ( 0 )
00010c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x9:
                +
00010d 3028     +CPI R18 , LOW ( 8 )
00010e e0e0     +LDI R30 , HIGH ( 8 )
00010f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000110 f444      	BRGE _0xA
                 ; 0000 0025 Matrix[i][j] = 0;
000111 d075      	RCALL SUBOPT_0x0
000112 e0e0      	LDI  R30,LOW(0)
000113 e0f0      	LDI  R31,HIGH(0)
000114 93ed      	ST   X+,R30
000115 93fc      	ST   X,R31
                 ; 0000 0026 }
                +
000116 5f2f     +SUBI R18 , LOW ( - 1 )
000117 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000118 cff4      	RJMP _0x9
                 _0xA:
                 ; 0000 0027 }
                +
000119 5f0f     +SUBI R16 , LOW ( - 1 )
00011a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00011b cfeb      	RJMP _0x6
                 _0x7:
                 ; 0000 0028 }
00011c c054      	RJMP _0x20A0001
                 ; .FEND
                 ;void MatrixPrint(){
                 ; 0000 002A void MatrixPrint(){
                 _MatrixPrint:
                 ; .FSTART _MatrixPrint
                 ; 0000 002B int i, j;
                 ; 0000 002C for(i = 0; i < 8; i++){
00011d d092      	RCALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                +
00011e e000     +LDI R16 , LOW ( 0 )
00011f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xC:
                +
000120 3008     +CPI R16 , LOW ( 8 )
000121 e0e0     +LDI R30 , HIGH ( 8 )
000122 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000123 f4ec      	BRGE _0xD
                 ; 0000 002D PORTA = ~(1 << i);
000124 2fe0      	MOV  R30,R16
000125 e0a1      	LDI  R26,LOW(1)
000126 d093      	RCALL __LSLB12
000127 95e0      	COM  R30
000128 b9e2      	OUT  0x2,R30
                 ; 0000 002E PORTB = 0x00;
000129 e0e0      	LDI  R30,LOW(0)
00012a b9e5      	OUT  0x5,R30
                 ; 0000 002F for(j = 0; j < 8; j++){
                +
00012b e020     +LDI R18 , LOW ( 0 )
00012c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF:
                +
00012d 3028     +CPI R18 , LOW ( 8 )
00012e e0e0     +LDI R30 , HIGH ( 8 )
00012f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000130 f454      	BRGE _0x10
                 ; 0000 0030 PORTB |= Matrix[i][j] << j;
000131 b015      	IN   R1,5
000132 d054      	RCALL SUBOPT_0x0
000133 91ac      	LD   R26,X
000134 2fe2      	MOV  R30,R18
000135 d084      	RCALL __LSLB12
000136 29e1      	OR   R30,R1
000137 b9e5      	OUT  0x5,R30
                 ; 0000 0031 }
                +
000138 5f2f     +SUBI R18 , LOW ( - 1 )
000139 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00013a cff2      	RJMP _0xF
                 _0x10:
                 ; 0000 0032 delay_ms(60);
00013b e3ac      	LDI  R26,LOW(60)
00013c e0b0      	LDI  R27,0
00013d d08d      	RCALL _delay_ms
                 ; 0000 0033 }
                +
00013e 5f0f     +SUBI R16 , LOW ( - 1 )
00013f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000140 cfdf      	RJMP _0xC
                 _0xD:
                 ; 0000 0034 }
000141 c02f      	RJMP _0x20A0001
                 ; .FEND
                 ;void MatrixSet(){
                 ; 0000 0036 void MatrixSet(){
                 _MatrixSet:
                 ; .FSTART _MatrixSet
                 ; 0000 0037 int i, j;
                 ; 0000 0038 for (i = 0; i < 8; i++) {
000142 d06d      	RCALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                +
000143 e000     +LDI R16 , LOW ( 0 )
000144 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x12:
                +
000145 3008     +CPI R16 , LOW ( 8 )
000146 e0e0     +LDI R30 , HIGH ( 8 )
000147 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000148 f484      	BRGE _0x13
                 ; 0000 0039 for (j = 0; j < 8; j++) {
                +
000149 e020     +LDI R18 , LOW ( 0 )
00014a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x15:
                +
00014b 3028     +CPI R18 , LOW ( 8 )
00014c e0e0     +LDI R30 , HIGH ( 8 )
00014d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00014e f43c      	BRGE _0x16
                 ; 0000 003A Matrix[i][j] = pattern[i][j];
00014f d042      	RCALL SUBOPT_0x1
000150 58e0      	SUBI R30,LOW(-_pattern)
000151 4ffd      	SBCI R31,HIGH(-_pattern)
000152 d04d      	RCALL SUBOPT_0x2
                 ; 0000 003B }
                +
000153 5f2f     +SUBI R18 , LOW ( - 1 )
000154 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000155 cff5      	RJMP _0x15
                 _0x16:
                 ; 0000 003C }
                +
000156 5f0f     +SUBI R16 , LOW ( - 1 )
000157 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000158 cfec      	RJMP _0x12
                 _0x13:
                 ; 0000 003D }
000159 c017      	RJMP _0x20A0001
                 ; .FEND
                 ;void MatrixSet2(){
                 ; 0000 003F void MatrixSet2(){
                 _MatrixSet2:
                 ; .FSTART _MatrixSet2
                 ; 0000 0040 int i, j;
                 ; 0000 0041 for (i = 0; i < 8; i++) {
00015a d055      	RCALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                +
00015b e000     +LDI R16 , LOW ( 0 )
00015c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x18:
                +
00015d 3008     +CPI R16 , LOW ( 8 )
00015e e0e0     +LDI R30 , HIGH ( 8 )
00015f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
000160 f484      	BRGE _0x19
                 ; 0000 0042 for (j = 0; j < 8; j++) {
                +
000161 e020     +LDI R18 , LOW ( 0 )
000162 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1B:
                +
000163 3028     +CPI R18 , LOW ( 8 )
000164 e0e0     +LDI R30 , HIGH ( 8 )
000165 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
000166 f43c      	BRGE _0x1C
                 ; 0000 0043 Matrix[i][j] = pattern2[i][j];
000167 d02a      	RCALL SUBOPT_0x1
000168 50e0      	SUBI R30,LOW(-_pattern2)
000169 4ffd      	SBCI R31,HIGH(-_pattern2)
00016a d035      	RCALL SUBOPT_0x2
                 ; 0000 0044 }
                +
00016b 5f2f     +SUBI R18 , LOW ( - 1 )
00016c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00016d cff5      	RJMP _0x1B
                 _0x1C:
                 ; 0000 0045 }
                +
00016e 5f0f     +SUBI R16 , LOW ( - 1 )
00016f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000170 cfec      	RJMP _0x18
                 _0x19:
                 ; 0000 0046 }
                 _0x20A0001:
000171 d043      	RCALL __LOADLOCR4
000172 9624      	ADIW R28,4
000173 9508      	RET
                 ; .FEND
                 ;void main(void){
                 ; 0000 0048 void main(void){
                 _main:
                 ; .FSTART _main
                 ; 0000 0049 DDRA = 0xFF; //Set port A pins as output
000174 efef      	LDI  R30,LOW(255)
000175 b9e1      	OUT  0x1,R30
                 ; 0000 004A DDRB = 0xFF; //Set port B pins as output
000176 b9e4      	OUT  0x4,R30
                 ; 0000 004B 
                 ; 0000 004C PORTA = 0x00; //Set A pins to low
000177 e0e0      	LDI  R30,LOW(0)
000178 b9e2      	OUT  0x2,R30
                 ; 0000 004D PORTB = 0xFF; //Set B pins to high
000179 efef      	LDI  R30,LOW(255)
00017a b9e5      	OUT  0x5,R30
                 ; 0000 004E 
                 ; 0000 004F while (1){
                 _0x1D:
                 ; 0000 0050 //Snake();
                 ; 0000 0051 MatrixSet();
00017b dfc6      	RCALL _MatrixSet
                 ; 0000 0052 MatrixPrint();
00017c d02f      	RCALL SUBOPT_0x3
                 ; 0000 0053 MatrixPrint();
                 ; 0000 0054 MatrixInit();
                 ; 0000 0055 MatrixPrint();
                 ; 0000 0056 delay_ms(2000);
00017d eda0      	LDI  R26,LOW(2000)
00017e e0b7      	LDI  R27,HIGH(2000)
00017f d04b      	RCALL _delay_ms
                 ; 0000 0057 MatrixSet2();
000180 dfd9      	RCALL _MatrixSet2
                 ; 0000 0058 MatrixPrint();
000181 d02a      	RCALL SUBOPT_0x3
                 ; 0000 0059 MatrixPrint();
                 ; 0000 005A MatrixInit();
                 ; 0000 005B MatrixPrint();
                 ; 0000 005C delay_ms(1000);
000182 eea8      	LDI  R26,LOW(1000)
000183 e0b3      	LDI  R27,HIGH(1000)
000184 d046      	RCALL _delay_ms
                 ; 0000 005D }
000185 cff5      	RJMP _0x1D
                 ; 0000 005E }
                 _0x20:
000186 cfff      	RJMP _0x20
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _Matrix:
000200           	.BYTE 0x80
                 _pattern:
000280           	.BYTE 0x80
                 _pattern2:
000300           	.BYTE 0x80
                 __seed_G101:
000380           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
000187 01f8      	MOVW R30,R16
000188 d039      	RCALL __LSLW4
000189 50e0      	SUBI R30,LOW(-_Matrix)
00018a 4ffe      	SBCI R31,HIGH(-_Matrix)
00018b 01df      	MOVW R26,R30
00018c 01f9      	MOVW R30,R18
00018d 0fee      	LSL  R30
00018e 1fff      	ROL  R31
00018f 0fae      	ADD  R26,R30
000190 1fbf      	ADC  R27,R31
000191 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1:
000192 01f8      	MOVW R30,R16
000193 d02e      	RCALL __LSLW4
000194 50e0      	SUBI R30,LOW(-_Matrix)
000195 4ffe      	SBCI R31,HIGH(-_Matrix)
000196 01df      	MOVW R26,R30
000197 01f9      	MOVW R30,R18
000198 0fee      	LSL  R30
000199 1fff      	ROL  R31
00019a 0fea      	ADD  R30,R26
00019b 1ffb      	ADC  R31,R27
00019c 010f      	MOVW R0,R30
00019d 01f8      	MOVW R30,R16
00019e d023      	RCALL __LSLW4
00019f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
0001a0 01df      	MOVW R26,R30
0001a1 01f9      	MOVW R30,R18
0001a2 0fee      	LSL  R30
0001a3 1fff      	ROL  R31
0001a4 0fae      	ADD  R26,R30
0001a5 1fbf      	ADC  R27,R31
0001a6 91ed      	LD   R30,X+
0001a7 91fd      	LD   R31,X+
0001a8 01d0      	MOVW R26,R0
0001a9 93ed      	ST   X+,R30
0001aa 93fc      	ST   X,R31
0001ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
0001ac df70      	RCALL _MatrixPrint
0001ad df6f      	RCALL _MatrixPrint
0001ae df55      	RCALL _MatrixInit
0001af cf6d      	RJMP _MatrixPrint
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR4:
0001b0 933a      	ST   -Y,R19
                 __SAVELOCR3:
0001b1 932a      	ST   -Y,R18
                 __SAVELOCR2:
0001b2 931a      	ST   -Y,R17
0001b3 930a      	ST   -Y,R16
0001b4 9508      	RET
                 
                 __LOADLOCR4:
0001b5 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0001b6 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0001b7 8119      	LDD  R17,Y+1
0001b8 8108      	LD   R16,Y
0001b9 9508      	RET
                 
                 __LSLB12:
0001ba 23ee      	TST  R30
0001bb 2e0e      	MOV  R0,R30
0001bc 2fea      	MOV  R30,R26
0001bd f019      	BREQ __LSLB12R
                 __LSLB12L:
0001be 0fee      	LSL  R30
0001bf 940a      	DEC  R0
0001c0 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
0001c1 9508      	RET
                 
                 __LSLW4:
0001c2 0fee      	LSL  R30
0001c3 1fff      	ROL  R31
                 __LSLW3:
0001c4 0fee      	LSL  R30
0001c5 1fff      	ROL  R31
                 __LSLW2:
0001c6 0fee      	LSL  R30
0001c7 1fff      	ROL  R31
0001c8 0fee      	LSL  R30
0001c9 1fff      	ROL  R31
0001ca 9508      	RET
                 
                 _delay_ms:
0001cb 9610      	adiw r26,0
0001cc f039      	breq __delay_ms1
                 __delay_ms0:
0001cd 95a8      	wdr
                +
0001ce e888     +LDI R24 , LOW ( 0x1388 )
0001cf e193     +LDI R25 , HIGH ( 0x1388 )
                +__DELAY_USW_LOOP :
0001d0 9701     +SBIW R24 , 1
0001d1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x1388
0001d2 9711      	sbiw r26,1
0001d3 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001d4 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega164A register use summary:
r0 :   8 r1 :   3 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  18 r17:  14 r18:  18 r19:  14 r20:   0 r21:   0 r22:   2 r23:   0 
r24:   9 r25:   3 r26:  18 r27:   9 r28:   2 r29:   1 r30:  78 r31:  21 
x  :  10 y  :   8 z  :   7 
Registers used: 18 out of 35 (51.4%)

ATmega164A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   3 
adiw  :   2 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   3 
brge  :   8 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  :   6 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   1 
cp    :   0 cpc   :   8 cpi   :   8 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   1 inc   :   0 jmp   :  32 ld    :   4 ldd   :   3 ldi   :  53 
lds   :   0 lpm   :   7 lsl   :   8 lsr   :   0 mov   :   4 movw  :  14 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   1 
ori   :   0 out   :  13 pop   :   0 push  :   0 rcall :  26 ret   :   9 
reti  :   0 rjmp  :  15 rol   :   7 ror   :   0 sbc   :   0 sbci  :  12 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   5 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  11 std   :   0 sts   :   0 sub   :   0 subi  :  12 swap  :   0 
tst   :   1 wdr   :   1 
Instructions used: 33 out of 116 (28.4%)

ATmega164A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0003aa    636    302    938   16384   5.7%
[.dseg] 0x000100 0x000384      0    388    388    1024  37.9%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
